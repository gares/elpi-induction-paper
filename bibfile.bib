@inproceedings{keller:hal-00730913,
  TITLE = {{Parametricity in an Impredicative Sort}},
  AUTHOR = {Keller, Chantal and Lasson, Marc},
  URL = {https://hal.inria.fr/hal-00730913},
  BOOKTITLE = {{CSL - 26th International Workshop/21st Annual Conference of the EACSL - 2012}},
  ADDRESS = {Fontainebleau, France},
  EDITOR = {Patrick C{\'e}gielski and Arnaud Durand},
  PUBLISHER = {{Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik}},
  SERIES = {CSL},
  VOLUME = {16},
  PAGES = {381-395},
  YEAR = {2012},
  MONTH = Sep,
  DOI = {10.4230/LIPIcs.CSL.2012.399},
  KEYWORDS = {Calculus of Inductive Constructions ; parametricity ; impredicativity ; Coq ; universes},
  PDF = {https://hal.inria.fr/hal-00730913/file/paramath.pdf},
  HAL_ID = {hal-00730913},
  HAL_VERSION = {v1},
}
@inproceedings{Wadler:1989:TF:99370.99404,
 author = {Wadler, Philip},
 title = {Theorems for Free!},
 booktitle = {Proceedings of the Fourth International Conference on Functional Programming Languages and Computer Architecture},
 series = {FPCA '89},
 year = {1989},
 isbn = {0-89791-328-0},
 location = {Imperial College, London, United Kingdom},
 pages = {347--359},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/99370.99404},
 doi = {10.1145/99370.99404},
 acmid = {99404},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@phdthesis{sacchini:pastel-00622429,
  TITLE = {{On type-based termination and dependent pattern matching in the calculus of inductive constructions}},
  AUTHOR = {Sacchini, Jorge Luis},
  URL = {https://pastel.archives-ouvertes.fr/pastel-00622429},
  NUMBER = {2011ENMP0022},
  SCHOOL = {{{\'E}cole Nationale Sup{\'e}rieure des Mines de Paris}},
  YEAR = {2011},
  MONTH = Jun,
  KEYWORDS = {Type-based termination ; d{\'e}pendent types ; pattern matching ; calculus of inductive constructions ; Terminaison bas{\'e}e sur les types ; types d{\'e}pendants ; filtrage par motifs ; calcul des constructions inductives},
  TYPE = {Theses},
  PDF = {https://pastel.archives-ouvertes.fr/pastel-00622429/file/21076_SACCHINI_2011_archivage.pdf},
  HAL_ID = {pastel-00622429},
  HAL_VERSION = {v1},
}

@InProceedings{10.1007/11617990_12,
author="McBride, Conor
and Goguen, Healfdene
and McKinna, James",
editor="Filli{\^a}tre, Jean-Christophe
and Paulin-Mohring, Christine
and Werner, Benjamin",
title="A Few Constructions on Constructors",
booktitle="Types for Proofs and Programs",
year="2006",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="186--200",
abstract="We present four constructions for standard equipment which can be generated for every inductive datatype: case analysis, structural recursion, no confusion, acyclicity. Our constructions follow a two-level approach---they require less work than the standard techniques which inspired them [11,8]. Moreover, given a suitably heterogeneous notion of equality, they extend without difficulty to inductive families of datatypes. These constructions are vital components of the translation from dependently typed programs in pattern matching style [7] to the equivalent programs expressed in terms of induction principles [21] and as such play a crucial behind-the-scenes r{\^o}le in Epigram [25].",
isbn="978-3-540-31429-5"
}

@InProceedings{10.1007/978-3-319-21401-6_26,
author="de Moura, Leonardo
and Kong, Soonho
and Avigad, Jeremy
and van Doorn, Floris
and von Raumer, Jakob",
editor="Felty, Amy P.
and Middeldorp, Aart",
title="The Lean Theorem Prover (System Description)",
booktitle="Automated Deduction - CADE-25",
year="2015",
publisher="Springer International Publishing",
address="Cham",
pages="378--388",
abstract="Lean is a new open source theorem prover being developed at Microsoft Research and Carnegie Mellon University, with a small trusted kernel based on dependent type theory. It aims to bridge the gap between interactive and automated theorem proving, by situating automated tools and methods in a framework that supports user interaction and the construction of fully specified axiomatic proofs. Lean is an ongoing and long-term effort, but it already provides many useful components, integrated development environments, and a rich API which can be used to embed it into other systems. It is currently being used to formalize category theory, homotopy type theory, and abstract algebra. We describe the project goals, system architecture, and main features, and we discuss applications and continuing work.",
isbn="978-3-319-21401-6"
}
@InProceedings{10.1007/978-3-642-22438-6_7,
author="Asperti, Andrea
and Ricciotti, Wilmer
and Sacerdoti Coen, Claudio
and Tassi, Enrico",
editor="Bj{\o}rner, Nikolaj
and Sofronie-Stokkermans, Viorica",
title="The {M}atita Interactive Theorem Prover",
booktitle="Automated Deduction -- CADE-23",
year="2011",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="64--69",
abstract="Matita is an interactive theorem prover being developed by the Helm team at the University of Bologna. Its stable version 0.5.x may be downloaded at http://matita.cs.unibo.it. The tool originated in the European project MoWGLI as a set of XML-based tools aimed to provide a mathematician-friendly web-interface to repositories of formal mathematical knoweldge, supporting advanced content-based functionalities for querying, searching and browsing the library. It has since then evolved into a fully fledged ITP, specifically designed as a light-weight, but competitive system, particularly suited for the assessment of innovative ideas, both at foundational and logical level. In this paper, we give an account of the whole system, its peculiarities and its main applications.",
isbn="978-3-642-22438-6"
}
@misc{the_coq_development_team_2018_1219885,
  author       = {The Coq Development Team},
  title        = {The Coq Proof Assistant, version 8.8.0},
  month        = apr,
  year         = 2018,
  doi          = {10.5281/zenodo.1219885},
  url          = {https://doi.org/10.5281/zenodo.1219885}
}
@book{Nipkow:2002:IPA:1791547,
 author = {Nipkow, Tobias and Wenzel, Markus and Paulson, Lawrence C.},
 title = {Isabelle/HOL: A Proof Assistant for Higher-order Logic},
 year = {2002},
 isbn = {3-540-43376-7},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 
@phdthesis{norell:thesis,
  author  = {Ulf Norell},
  title	  = {Towards a practical programming language based on dependent type
	     theory},
  school  = {Department of Computer Science and Engineering, Chalmers University of Technology},
  year	  = 2007,
  month	  = {September},
  address = {SE-412 96 G\"{o}teborg, Sweden}
}

@InProceedings{10.1007/3-540-44957-4_16,
author="Miller, Dale",
editor="Lloyd, John
and Dahl, Veronica
and Furbach, Ulrich
and Kerber, Manfred
and Lau, Kung-Kiu
and Palamidessi, Catuscia
and Pereira, Lu{\'i}s Moniz
and Sagiv, Yehoshua
and Stuckey, Peter J.",
title="Abstract Syntax for Variable Binders: An Overview",
booktitle="Computational Logic --- CL 2000",
year="2000",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="239--253",
abstract="A large variety of computing systems, such as compilers, interpreters, static analyzers, and theorem provers, need to manipulate syntactic objects like programs, types, formulas, and proofs. A common characteristic of these syntactic objects is that they contain variable binders, such as quantifiers, formal parameters, and blocks. It is a common observation that representing such binders using only first-order expressions is problematic since the notions of bound variable names, free and bound occurrences, equality up to alpha-conversion, substitution, etc., are not addressed naturally by the structure of first-order terms (labeled trees). This overview describes a higher-level and more declarative approach to representing syntax within such computational systems. In particular, we shall focus on a representation of syntax called higher-order abstract syntax and on a more primitive version of that representation called $\lambda$-tree syntax.",
isbn="978-3-540-44957-7"
}

@inproceedings{dunchev:hal-01176856,
  TITLE = {{ELPI: fast, Embeddable, $\lambda$Prolog Interpreter}},
  AUTHOR = {Dunchev, Cvetan and Guidi, Ferruccio and Sacerdoti Coen, Claudio and Tassi, Enrico},
  URL = {https://hal.inria.fr/hal-01176856},
  BOOKTITLE = {{Proceedings of LPAR}},
  ADDRESS = {Suva, Fiji},
  YEAR = {2015},
  MONTH = Nov,
  PDF = {https://hal.inria.fr/hal-01176856/file/lpar2015.pdf},
  HAL_ID = {hal-01176856},
  HAL_VERSION = {v1},
}

@unpublished{tassi:hal-01637063,
  TITLE = {{Elpi: an extension language for Coq (Metaprogramming Coq in the Elpi $\lambda$Prolog dialect)}},
  AUTHOR = {Tassi, Enrico},
  URL = {https://hal.inria.fr/hal-01637063},
  NOTE = {CoqPL},
  YEAR = {2018},
  MONTH = Jan,
  KEYWORDS = {Coq ; $\lambda$Prolog ; metaprogramming ; extension language},
  PDF = {https://hal.inria.fr/hal-01637063/file/coqpl2018.pdf},
  HAL_ID = {hal-01637063},
  HAL_VERSION = {v1},
}
@manual{ocamlrefman,
  author =       {Xavier Leroy and Damien Doligez and Alain Frisch and
Jacques Garrigue
                  and Didier R\'emy and J\'er\^ome Vouillon},
  title =        {The OCaml system (release 4.07): Documentation and
user's manual},
  organization = {Institut National de Recherche en Informatique et en
Automatique},
  year =         2018,
  month=jul,
  url = {http://caml.inria.fr/pub/docs/manual-ocaml/},
}


@article{Sheard:2002:TMH:636517.636528,
 author = {Sheard, Tim and Jones, Simon Peyton},
 title = {Template Meta-programming for Haskell},
 journal = {SIGPLAN Not.},
 issue_date = {December 2002},
 volume = {37},
 number = {12},
 month = dec,
 year = {2002},
 issn = {0362-1340},
 pages = {60--75},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/636517.636528},
 doi = {10.1145/636517.636528},
 acmid = {636528},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Meta programming, templates},
} 
@inproceedings{Sozeau:2008:FTC:1459784.1459810,
 author = {Sozeau, Matthieu and Oury, Nicolas},
 title = {First-Class Type Classes},
 booktitle = {Proceedings of the 21st International Conference on Theorem Proving in Higher Order Logics},
 series = {TPHOLs '08},
 year = {2008},
 isbn = {978-3-540-71065-3},
 location = {Montreal, P.Q., Canada},
 pages = {278--293},
 numpages = {16},
 url = {http://dx.doi.org/10.1007/978-3-540-71067-7_23},
 doi = {10.1007/978-3-540-71067-7_23},
 acmid = {1459810},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 


@InProceedings{10.1007/978-3-642-39634-2_5,
author="Mahboubi, Assia
and Tassi, Enrico",
editor="Blazy, Sandrine
and Paulin-Mohring, Christine
and Pichardie, David",
title="Canonical {S}tructures for the {W}orking {C}oq {U}ser",
booktitle="Interactive Theorem Proving",
year="2013",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="19--34",
abstract="This paper provides a gentle introduction to the art of programming type inference with the mechanism of Canonical Structures. Programmable type inference has been one of the key ingredients for the successful formalization of the Odd Order Theorem using the Coq proof assistant. The paper concludes comparing the language of Canonical Structures to the one of Type Classes and Unification Hints.",
isbn="978-3-642-39634-2"
}

@book{mcb,
author="Mahboubi, Assia and Tassi, Enrico",
year="2018",
title="Mathematical {C}omponents",
publisher="draft, v1-183-gb37ad7",
}
@article{Hudak:1992:RPL:130697.130699,
 author = {Hudak, Paul and Peyton Jones, Simon and Wadler, Philip and Boutel, Brian and Fairbairn, Jon and Fasel, Joseph and Guzm\'{a}n, Mar\'{\i}a M. and Hammond, Kevin and Hughes, John and Johnsson, Thomas and Kieburtz, Dick and Nikhil, Rishiyur and Partain, Will and Peterson, John},
 title = {Report on the Programming Language Haskell: A Non-strict, Purely Functional Language Version 1.2},
 journal = {SIGPLAN Not.},
 issue_date = {May 1992},
 volume = {27},
 number = {5},
 month = may,
 year = {1992},
 issn = {0362-1340},
 pages = {1--164},
 numpages = {164},
 url = {http://doi.acm.org/10.1145/130697.130699},
 doi = {10.1145/130697.130699},
 acmid = {130699},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@book{miller_nadathur_2012, place={Cambridge}, title={Programming with Higher-Order Logic}, DOI={10.1017/CBO9781139021326}, publisher={Cambridge University Press}, author={Miller, Dale and Nadathur, Gopalan}, year={2012}}


@InProceedings{10.1007/978-3-319-08970-6_7,
	author="Blanchette, Jasmin Christian
		and H{\"o}lzl, Johannes
		and Lochbihler, Andreas
		and Panny, Lorenz
		and Popescu, Andrei
		and Traytel, Dmitriy",
	editor="Klein, Gerwin
		and Gamboa, Ruben",
	title="Truly Modular (Co)datatypes for Isabelle/HOL",
	booktitle="Interactive Theorem Proving",
	year="2014",
	publisher="Springer International Publishing",
	address="Cham",
	pages="93--110",
	abstract="We extended Isabelle/HOL with a pair of definitional commands for datatypes and codatatypes. They support mutual and nested (co)recursion through well-behaved type constructors, including mixed recursion--corecursion, and are complemented by syntaxes for introducing primitively (co)recursive functions and by a general proof method for reasoning coinductively. As a case study, we ported Isabelle's Coinductive library to use the new commands, eliminating the need for tedious ad hoc constructions.",
	isbn="978-3-319-08970-6"
}
@inproceedings{Traytel:2012:FCD:2358958.2359545,
 author = {Traytel, Dmitry and Popescu, Andrei and Blanchette, Jasmin C.},
 title = {Foundational, Compositional (Co)Datatypes for Higher-Order Logic: Category Theory Applied to Theorem Proving},
 booktitle = {Proceedings of the 2012 27th Annual IEEE/ACM Symposium on Logic in Computer Science},
 series = {LICS '12},
 year = {2012},
 isbn = {978-0-7695-4769-5},
 location = {New Orleans, Louisiana},
 pages = {596--605},
 numpages = {10},
 url = {https://doi.org/10.1109/LICS.2012.75},
 doi = {10.1109/LICS.2012.75},
 acmid = {2359545},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {Category theory, higher-order logic, interactive theorem proving, (co)datatypes, cardinals},
} 


@article{DBLP:journals/lmcs/Abel08,
  author    = {Andreas Abel},
  title     = {Semi-Continuous Sized Types and Termination},
  journal   = {Logical Methods in Computer Science},
  volume    = {4},
  number    = {2},
  year      = {2008},
  url       = {https://doi.org/10.2168/LMCS-4(2:3)2008},
  doi       = {10.2168/LMCS-4(2:3)2008},
  timestamp = {Sat, 20 May 2017 00:22:52 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/lmcs/Abel08},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/lpar/BartheGP06,
  author    = {Gilles Barthe and
               Benjamin Gr{\'{e}}goire and
               Fernando Pastawski},
  title     = {CIC{\^{}}{:} Type-Based Termination of Recursive Definitions
               in the Calculus of Inductive Constructions},
  booktitle = {Logic for Programming, Artificial Intelligence, and Reasoning, 13th
               International Conference, {LPAR} 2006, Phnom Penh, Cambodia, November
               13-17, 2006, Proceedings},
  pages     = {257--271},
  year      = {2006},
  url       = {https://doi.org/10.1007/11916277\_18},
  doi       = {10.1007/11916277\_18},
  timestamp = {Sun, 04 Jun 2017 10:11:10 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/lpar/BartheGP06},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

